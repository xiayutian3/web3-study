// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

// immutable的机制
// 1.不占储存槽
// 2.与constant类似，最后都是嵌入代码
// 3.一个是编译时，一个是执行构造函数时对占位符进行替换

contract ImmutableTest {
    uint immutable num;

    constructor(uint _num){
        num = _num;
    }
    function getNum() external view returns(uint) {
        return num;
    }
  
}
// // immutable汇编中的
// // creationCode执行到最后的时候，从0x0一直到code.length所存的就是runtimecode
// // 部署transaction中的calldata是creationCode，尾部是构造函数参数，参数之前runtimecode

// 没初始化的runtimecode
// 6080604052348015600f57600080fd5b506004361060285760003560e01c806367e0badb14602d575b600080fd5b60336047565b604051603e9190607c565b60405180910390f35b60007f000000000000000000000000 0000000000000000000000000000000000000000 905090565b6076816095565b82525050565b6000602082019050608f6000830184606f565b92915050565b600081905091905056fea2646970667358221220d6b4ca300ee5469edb4cd72e4ec94d9ffe5b76eb96e987888146875e60df16b464736f6c63430008070033000000000000000000000000


// 初始化之后的runtimecode

// 6080604052348015600f57600080fd5b506004361060285760003560e01c806367e0badb14602d575b600080fd5b60336047565b604051603e9190607c565b60405180910390f35b60007f000000000000000000000000 5b38da6a701c568545dcfcb03fcb875f56beddc4 905090565b6076816095565b82525050565b600060\t??????_V????P?V??v???V??RPPV????",
// 	"0x80": "2082019050608f6000830184606f565b92915050565b600081905091905056fe\t ???P????????oV???PPV?????P??PV?",
// 	"0xa0": "a2646970667358221220d6b4ca300ee5469edb4cd72e4ec94d9ffe5b76eb96e9\t?dipfsX?? ???0??F??L??N?M???v???",
// 	"0xc0": "87888146875e60df16b464736f6c634300080700330000000000000000000000\t???F??????dsolcC????3???????????"
// }